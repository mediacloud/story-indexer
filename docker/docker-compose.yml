version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - mc_story_indexer
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 2

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - mc_story_indexer
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 2

  common_worker: &common_worker
    #Pushing to a local registry for now, while in dev loop.
    image: localhost:5000/common_worker
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      RABBITMQ_URL: amqp://rabbitmq:5672
      RUN: ${RUN}
    networks:
      - mc_story_indexer
    restart:
        "no"
    ## Not supported by docker swarm at this time, and services auto-restart anyway.
    #depends_on:
    #  rabbitmq:
    #    condition: service_healthy

  pipeline_configurator:
    <<: *common_worker
    environment:
       RUN: configure-pipeline
       ARGS: "configure"
       RABBITMQ_URL: amqp://rabbitmq:5672
    restart:
        "on-failure"

  fetch_worker:
    <<: *common_worker
    environment:
      RUN: fetcher
      ARGS: "--quiet --fetch-date=2023-07-01 --num-batches=5 --batch-index={{.Task.Slot}} --sample-size=20 "
      RABBITMQ_URL: amqp://rabbitmq:5672
    restart:
        "on-failure"
    deploy:
      replicas: 5

  parser_worker:
    <<: *common_worker
    environment:
      RUN: parser
      RABBITMQ_URL: amqp://rabbitmq:5672
    restart:
        "on-failure"

  importer_worker:
    <<: *common_worker
    environment:
      RUN: importer
      RABBITMQ_URL: amqp://rabbitmq:5672
      ELASTICSEARCH_HOST: http://elasticsearch:9200/
    networks:
      - mc_story_indexer
    restart:
        "on-failure"

volumes:
  elasticsearch_data:

networks:
  mc_story_indexer:
    driver: overlay
