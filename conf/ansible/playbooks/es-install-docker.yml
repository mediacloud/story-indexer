---
- name: Playbook to Deploy Elasticsearch in Docker
  hosts: "{{ target | default('localhost') }}"
  # Move this to task level rather than play level our task to source envs need to
  # run as non-root
  become: false

  pre_tasks:
    - name: Source all env varsiables
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/../tasks/load-envs.yml"

  tasks:
    - name: Check Docker installation
      ansible.builtin.command: docker --version
      register: docker_installed
      ignore_errors: true
      changed_when: false

    - name: Create Elasticsearch data directories (staging)
      ansible.builtin.file:
        path: "{{ volume_device_prefix }}/{{ item.name }}/data"
        state: directory
        mode: "0755"
      loop: "{{ docker_elasticsearch_nodes }}"
      when: env == "staging"
      become: true

    - name: Create environment-specific data directory
      ansible.builtin.file:
        path: "/tmp/elasticsearch-{{ env }}"
        state: directory
        mode: "0755"

    - name: Create Docker Compose file for Elasticsearch cluster
      ansible.builtin.template:
        src: "{{ playbook_dir }}/../templates/docker-compose.yml.j2"
        dest: "/tmp/elasticsearch-{{ env }}/docker-compose.yml"
        mode: "0644"
        force: true
        backup: true
      register: compose_template_result

    - name: Stop and remove existing containers
      community.docker.docker_compose_v2:
        project_src: "/tmp/elasticsearch-{{ env }}"
        state: absent
      become: true

    - name: Deploy Elasticsearch Cluster
      community.docker.docker_compose_v2:
        project_src: "/tmp/elasticsearch-{{ env }}"
        state: present
      become: true

    - name: Verify cluster health for all nodes
      ansible.builtin.uri:
        url: "{{ es_api_scheme }}://{{ es_api_host }}:{{ node.mc_es_http_port }}/_cluster/health"
        status_code: 200
      register: health_check
      until: health_check.status == 200
      retries: 6
      delay: 10
      loop: "{{ docker_elasticsearch_nodes }}"
      loop_control:
        loop_var: node
